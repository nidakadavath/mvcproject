//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace mvcproject.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class mvcprojectEntities : DbContext
    {
        public mvcprojectEntities()
            : base("name=mvcprojectEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<comp_reg> comp_reg { get; set; }
        public virtual DbSet<login_tab> login_tab { get; set; }
        public virtual DbSet<user_reg> user_reg { get; set; }
        public virtual DbSet<job_1> job_1 { get; set; }
        
        public virtual DbSet<jobcv1> jobcv1 { get; set; }
    
        public virtual int sp_compreg(Nullable<int> cid, string cna, string caddr, Nullable<long> cph, string cemail, string weaddr, string pho)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var cnaParameter = cna != null ?
                new ObjectParameter("cna", cna) :
                new ObjectParameter("cna", typeof(string));
    
            var caddrParameter = caddr != null ?
                new ObjectParameter("caddr", caddr) :
                new ObjectParameter("caddr", typeof(string));
    
            var cphParameter = cph.HasValue ?
                new ObjectParameter("cph", cph) :
                new ObjectParameter("cph", typeof(long));
    
            var cemailParameter = cemail != null ?
                new ObjectParameter("cemail", cemail) :
                new ObjectParameter("cemail", typeof(string));
    
            var weaddrParameter = weaddr != null ?
                new ObjectParameter("weaddr", weaddr) :
                new ObjectParameter("weaddr", typeof(string));
    
            var phoParameter = pho != null ?
                new ObjectParameter("pho", pho) :
                new ObjectParameter("pho", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_compreg", cidParameter, cnaParameter, caddrParameter, cphParameter, cemailParameter, weaddrParameter, phoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_loginCountId(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_loginCountId", unaParameter, pwdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_loginId(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_loginId", unaParameter, pwdParameter);
        }
    
        public virtual int sp_loginsert(Nullable<int> rid, string una, string pw, string ltype)
        {
            var ridParameter = rid.HasValue ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(int));
    
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            var ltypeParameter = ltype != null ?
                new ObjectParameter("ltype", ltype) :
                new ObjectParameter("ltype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_loginsert", ridParameter, unaParameter, pwParameter, ltypeParameter);
        }
    
        public virtual ObjectResult<string> sp_loginType(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_loginType", unaParameter, pwdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_MaxIdLogin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_MaxIdLogin");
        }
    
        public virtual int sp_userreg(Nullable<int> user_id, string name, Nullable<int> age, string address, Nullable<long> phone, string email, string gender, string qualification, string experience, string skills, string resume, string photo, string current_location)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(long));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var qualificationParameter = qualification != null ?
                new ObjectParameter("qualification", qualification) :
                new ObjectParameter("qualification", typeof(string));
    
            var experienceParameter = experience != null ?
                new ObjectParameter("experience", experience) :
                new ObjectParameter("experience", typeof(string));
    
            var skillsParameter = skills != null ?
                new ObjectParameter("skills", skills) :
                new ObjectParameter("skills", typeof(string));
    
            var resumeParameter = resume != null ?
                new ObjectParameter("resume", resume) :
                new ObjectParameter("resume", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(string));
    
            var current_locationParameter = current_location != null ?
                new ObjectParameter("current_location", current_location) :
                new ObjectParameter("current_location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_userreg", user_idParameter, nameParameter, ageParameter, addressParameter, phoneParameter, emailParameter, genderParameter, qualificationParameter, experienceParameter, skillsParameter, resumeParameter, photoParameter, current_locationParameter);
        }
    
        public virtual ObjectResult<GetActiveJobs_Result> GetActiveJobs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetActiveJobs_Result>("GetActiveJobs");
        }
    
        
    
        public virtual int sp_jobsearches(string qry)
        {
            var qryParameter = qry != null ?
                new ObjectParameter("qry", qry) :
                new ObjectParameter("qry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_jobsearches", qryParameter);
        }
    
        public virtual int sp_applycv(Nullable<int> job_id, Nullable<int> user_id, Nullable<int> comp_id, string resume, Nullable<System.DateTime> date, string status)
        {
            var job_idParameter = job_id.HasValue ?
                new ObjectParameter("job_id", job_id) :
                new ObjectParameter("job_id", typeof(int));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var comp_idParameter = comp_id.HasValue ?
                new ObjectParameter("comp_id", comp_id) :
                new ObjectParameter("comp_id", typeof(int));
    
            var resumeParameter = resume != null ?
                new ObjectParameter("resume", resume) :
                new ObjectParameter("resume", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_applycv", job_idParameter, user_idParameter, comp_idParameter, resumeParameter, dateParameter, statusParameter);
        }
    }
}
